// Mocks generated by Mockito 5.4.6 from annotations
// in zentriq/test/viewmodels/wallet_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:zentriq/core/utils/result.dart' as _i4;
import 'package:zentriq/domain/entities/transaction.dart' as _i7;
import 'package:zentriq/domain/entities/wallet.dart' as _i5;
import 'package:zentriq/domain/repositories/wallet_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [WalletRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletRepository extends _i1.Mock implements _i2.WalletRepository {
  MockWalletRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.Wallet>> getCurrentWallet() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentWallet, []),
            returnValue: _i3.Future<_i4.Result<_i5.Wallet>>.value(
              _i6.dummyValue<_i4.Result<_i5.Wallet>>(
                this,
                Invocation.method(#getCurrentWallet, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Wallet>>);

  @override
  _i3.Future<_i4.Result<double>> getWalletBalance(String? address) =>
      (super.noSuchMethod(
            Invocation.method(#getWalletBalance, [address]),
            returnValue: _i3.Future<_i4.Result<double>>.value(
              _i6.dummyValue<_i4.Result<double>>(
                this,
                Invocation.method(#getWalletBalance, [address]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<double>> getWalletBalanceUSD(String? address) =>
      (super.noSuchMethod(
            Invocation.method(#getWalletBalanceUSD, [address]),
            returnValue: _i3.Future<_i4.Result<double>>.value(
              _i6.dummyValue<_i4.Result<double>>(
                this,
                Invocation.method(#getWalletBalanceUSD, [address]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<double>>);

  @override
  _i3.Future<_i4.Result<List<_i7.Transaction>>> getTransactionHistory(
    String? address,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTransactionHistory, [address]),
            returnValue: _i3.Future<_i4.Result<List<_i7.Transaction>>>.value(
              _i6.dummyValue<_i4.Result<List<_i7.Transaction>>>(
                this,
                Invocation.method(#getTransactionHistory, [address]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i7.Transaction>>>);

  @override
  _i3.Future<_i4.Result<_i7.Transaction>> sendTransaction({
    required String? toAddress,
    required double? amount,
    String? note,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendTransaction, [], {
              #toAddress: toAddress,
              #amount: amount,
              #note: note,
            }),
            returnValue: _i3.Future<_i4.Result<_i7.Transaction>>.value(
              _i6.dummyValue<_i4.Result<_i7.Transaction>>(
                this,
                Invocation.method(#sendTransaction, [], {
                  #toAddress: toAddress,
                  #amount: amount,
                  #note: note,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.Transaction>>);

  @override
  _i3.Future<_i4.Result<String>> generateNewAddress() =>
      (super.noSuchMethod(
            Invocation.method(#generateNewAddress, []),
            returnValue: _i3.Future<_i4.Result<String>>.value(
              _i6.dummyValue<_i4.Result<String>>(
                this,
                Invocation.method(#generateNewAddress, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<String>>);

  @override
  _i3.Future<_i4.Result<_i5.Wallet>> refreshWallet(String? address) =>
      (super.noSuchMethod(
            Invocation.method(#refreshWallet, [address]),
            returnValue: _i3.Future<_i4.Result<_i5.Wallet>>.value(
              _i6.dummyValue<_i4.Result<_i5.Wallet>>(
                this,
                Invocation.method(#refreshWallet, [address]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Wallet>>);
}
