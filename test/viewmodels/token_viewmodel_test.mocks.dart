// Mocks generated by Mockito 5.4.6 from annotations
// in zentriq/test/viewmodels/token_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:zentriq/core/utils/result.dart' as _i4;
import 'package:zentriq/domain/entities/token.dart' as _i5;
import 'package:zentriq/domain/repositories/token_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [TokenRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenRepository extends _i1.Mock implements _i2.TokenRepository {
  MockTokenRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<List<_i5.Token>>> getAllTokens() =>
      (super.noSuchMethod(
            Invocation.method(#getAllTokens, []),
            returnValue: _i3.Future<_i4.Result<List<_i5.Token>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Token>>>(
                this,
                Invocation.method(#getAllTokens, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Token>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Token>>> getTopPerformers({int? limit = 10}) =>
      (super.noSuchMethod(
            Invocation.method(#getTopPerformers, [], {#limit: limit}),
            returnValue: _i3.Future<_i4.Result<List<_i5.Token>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Token>>>(
                this,
                Invocation.method(#getTopPerformers, [], {#limit: limit}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Token>>>);

  @override
  _i3.Future<_i4.Result<_i5.Token>> getTokenBySymbol(String? symbol) =>
      (super.noSuchMethod(
            Invocation.method(#getTokenBySymbol, [symbol]),
            returnValue: _i3.Future<_i4.Result<_i5.Token>>.value(
              _i6.dummyValue<_i4.Result<_i5.Token>>(
                this,
                Invocation.method(#getTokenBySymbol, [symbol]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Token>>);

  @override
  _i3.Future<_i4.Result<_i5.Token>> getTokenById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTokenById, [id]),
            returnValue: _i3.Future<_i4.Result<_i5.Token>>.value(
              _i6.dummyValue<_i4.Result<_i5.Token>>(
                this,
                Invocation.method(#getTokenById, [id]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Token>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Token>>> refreshTokens() =>
      (super.noSuchMethod(
            Invocation.method(#refreshTokens, []),
            returnValue: _i3.Future<_i4.Result<List<_i5.Token>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Token>>>(
                this,
                Invocation.method(#refreshTokens, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Token>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Token>>> getTokensByMarketCap({
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTokensByMarketCap, [], {#limit: limit}),
            returnValue: _i3.Future<_i4.Result<List<_i5.Token>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Token>>>(
                this,
                Invocation.method(#getTokensByMarketCap, [], {#limit: limit}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Token>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Token>>> getTokensByVolume({
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getTokensByVolume, [], {#limit: limit}),
            returnValue: _i3.Future<_i4.Result<List<_i5.Token>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Token>>>(
                this,
                Invocation.method(#getTokensByVolume, [], {#limit: limit}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Token>>>);
}
